#edit-mode: -*- python -*-
#coding:gbk

#工作路径.
WORKROOT('../../../../../')

#使用硬链接copy.
CopyUsingHardLink(True)

#支持32位/64位平台编译
#ENABLE_MULTI_LIBS(True)

#C预处理器参数.
CPPFLAGS('-D_GNU_SOURCE -D__STDC_LIMIT_MACROS -DVERSION=\\\"1.9.8.7\\\"')
#为32位目标编译指定额外的预处理参数
#CPPFLAGS_32('-D_XOPEN_SOURE=500')

#C编译参数.
CFLAGS('-g -pipe -W -Wall -fPIC')

#C++编译参数.
CXXFLAGS('-g -pipe -W -Wall -fPIC')

#IDL编译参数
IDLFLAGS('--compack')

#UBRPC编译参数
UBRPCFLAGS('--compack')

#头文件路径.
INCPATHS('. ./include ./output ./output/include')

#使用库
#LIBS('./librstree.a')

#链接参数.
LDFLAGS('-lpthread -lcrypto -lrt')

#依赖模块
CONFIGS('lib2-64/ullib public/ub public/mcpack third-64/boost public/gm/galileo lib2-64/ccode lib2-64/string third-64/tcmalloc')

#为32位/64位指定不同的依赖路径.
#CONFIGS_32('lib2/ullib')
#CONFIGS_64('lib2-64/ullib')


INCPATHS('./include ./utils')
srcs=GLOB('./src/*.cpp')

#可执行文件
Application('rstree',Sources(srcs))
#静态库
#StaticLibrary('rstree',Sources(srcs))
#共享库
#SharedLibrary('rstree',Sources(srcs))
#子目录
#Directory('demo')

